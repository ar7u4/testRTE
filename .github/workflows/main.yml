name: Deploy Lambda Functions and Layers

on:
  push:
    branches:
      - main

jobs:
  deploy-lambda-functions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Update with your AWS region

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42

      - name: Deploy Lambda functions
        if: contains(steps.changed-files.outputs.all_changed_files, 'Lambda_functions/')
        run: |
          for modified_folder in $(echo ${{ steps.changed-files.outputs.all_changed_files }} | tr " " "\n" | grep '^Lambda_functions/'); do
              function_folder="${modified_folder#*/}/"  # Include trailing slash to retain "anymail/"
              function_name=$(basename "$function_folder")  # Extract only "anymail"

              # Zip the function code using the extracted folder path
              zip -r "${function_name}.zip" "$function_folder"



            # Update the function code
            aws lambda update-function-code \
              --function-name "$function_name" \
              --zip-file "fileb://${function_name}.zip"

            # Get the new version number
            new_version_number=$(aws lambda list-versions-by-function --function-name "$function_name" --max-items 1 --query 'Versions[0].Version' --output text)

            # Update the "latest" alias to point to the new version
            aws lambda update-alias \
              --function-name "$function_name" \
              --name "latest" \
              --function-version "$new_version_number"
          done


  deploy-lambda-layer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Update with your AWS region

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42

      - name: Deploy Lambda layer
        if: contains(steps.changed-files.outputs.all_changed_files, 'AWS_Lambda_layer/')
        run: |
          # Publish the layer (assuming it's already zipped)
          layer_version=$(aws lambda publish-layer-version \
            --layer-name "rte-glb-layer" \
            --zip-file "fileb://AWS_Lambda_layer/python.zip" \
            --compatible-runtimes python3.10 | jq -r '.LayerVersionArn')

          # Update all functions with the new layer version
          for function_name in $(aws lambda list-functions --max-items 1000 --query 'Functions[*].FunctionName' --output text); do
            aws lambda update-function-configuration \
              --function-name "$function_name" \
              --layers "$layer_version"
          }
